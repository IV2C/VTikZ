name: Python package

on: 
  push:
    branches: 
      - dev

jobs:
  tests:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.7'
          architecture: 'x64'

      - name: Install dependencies
        run: |
            sudo apt-get install texlive-latex-base
            sudo apt-get install texlive-fonts-recommended
            sudo apt-get install texlive-fonts-extra
            sudo apt-get install texlive-latex-extra
            sudo apt-get install poppler-utils
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install coverage coverage-badge
      - name: add config
        run: |
            mv config-vtikz.dev.cfg config-vtikz.cfg
      - name: run tests
      #skipping coverage of these files because they are tested locally
        run: |
            coverage run --omit=vtikz/api/chat_api.py,tests/test_clip_comparer.py --source=vtikz -m unittest discover tests
            coverage html
            coverage-badge -o coverage.svg
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
      - name: Upload coverage-badge report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: coverage.svg


  update-main:
    runs-on: ubuntu-latest
    needs: tests
    #if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for branch update

      - name: Force checkout main and reset to dev
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git reset --hard dev
          git push origin main --force

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-badge
          path: DOC/images/


      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: DOC/htmlcov/
  
      - name: Update coverage artifacts
        env:
          GH_TOKEN: ${{ secrets.VTIKZ_CI_TOKEN }}
        run: |
          git add DOC/images/coverage.svg DOC/htmlcov/
          git commit -m "Update coverage artifacts"
          git push origin main

